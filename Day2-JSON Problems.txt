Problem 0 : Part A (15 mins):

Playing with JSON object’s Values:
-----------------------------

Fluffy sorry, Fluffyy is my fav cat and it has 2 catFriends
Write a code to get the below details of Fluffyy so that
I can take him to vet.
-----------------------------
var cat = {
 name: ‘Fluffy’,
 activities: [‘play’, ‘eat cat food’],
 catFriends: [
 {
 name: ‘bar’,
 activities: [‘be grumpy’, ‘eat bread omblet’],
 weight: 8,
 furcolor: ‘white’
 }, 
 {
 name: ‘foo’,
 activities: [‘sleep’, ‘pre-sleep naps’],
 weight: 3
 }
 ]
}
console.log(cat);
-----------------------------
Basic Tasks to play with JSON
1.Add height and weight to Fluffy
2.Fluffy name is spelled wrongly. Update it to Fluffyy
3.List all the activities of Fluffyy’s catFriends.
4.Print the catFriends names.
5.Print the total weight of catFriends
6.Print the total activities of all cats (op:6)
7.Add 2 more activities to bar & foo cats
8.Update the fur color of bar
-----------------------------
Coding:

var cat = {
 name: "Fluffy",
 activities: "[‘play’, ‘eat cat food’]",
 catFriends: [
 {
 name: "bar",
 activities:"[‘be grumpy’, ‘eat bread omblet’]",
 weight: 8,
 furcolor: "white"
 }, 
 {
 name: "foo",
 activities: "[‘sleep’, ‘pre-sleep naps’]",
 
 weight: 3
 }
 ]
};
cat.weight="4";
cat.height="6";
cat.name="fluffyy";
cat.catFriends[0].furcolor="black";

var sum=0;
for(var i=0;i<cat.catFriends.length;i++)
{
 
 console.log(cat.catFriends[i].activities); 
 console.log(cat.catFriends[i].name);
 sum+=cat.catFriends[i].weight;
}
console.log(sum);

----------------------------------------------------------------
----------------------------------------------------------------
Problem 0 : Part B (15 mins):
Iterating with JSON object’s Values:

Above is some information about my car. As you can see, I am not the best driver.
I have caused a few accidents.
Please update this driving record so that I can feel better about my driving skills.
-----------------------------
var myCar = {
 make: ‘Bugatti’,
 model: ‘Bugatti La Voiture Noire’,
 year: 2019,
 accidents: [
 {
 date: ‘3/15/2019’,
 damage_points: ‘5000’,
 atFaultForAccident: true
 },
 {
 date: ‘7/4/2022’,
 damage_points: ‘2200’,
 atFaultForAccident: true
 },
 {
 date: ‘6/22/2021’,
 damage_points: ‘7900’,
 atFaultForAccident: true
 }
 ]
}
-----------------------------
Tasks:
1. Loop over the accidents array. Change atFaultForAccident from true to false.
2. Print the dated of my accidents
-----------------------------
Coding:

var myCar = {
 make: "Bugatti",
 model: "Bugatti La Voiture Noire",
 year: 2019,
 accidents: [
 {
 date: "3/15/2019",
 damage_points: "5000",
 atFaultForAccident: true
 },
 {
 date: "7/4/2022",
 damage_points: "2200",
 atFaultForAccident: true
 },
 {
 date: "6/22/2021",
 damage_points:"7900",
 atFaultForAccident: true
 }
 ]
};

for(var i in myCar.accidents)
{
 var x=myCar.accidents[i].atFaultForAccident="false"+" ";
 console.log(x);
 console.log(myCar.accidents[i].date);
   
}
----------------------------------------------------------------
----------------------------------------------------------------
1.Parsing an JSON object’s Values:

Write a function called “printAllValues” which returns an newArray of all the input object’s values.
-----------------------------
Input (Object):
var object = {name: “RajiniKanth”, age: 33, hasPets : false};
-----------------------------
Output:
[“RajiniKanth”, 33, false]
-----------------------------
Sample Function proto:
var obj = {name : “RajiniKanth”, age : 33, hasPets : false};
function printAllValues(obj) {
 // your code here
}
-----------------------------
Code:

var obj = {name : "RajiniKanth", age : 33, hasPets : false};

function printAllValues(obj)
{
 console.log(Object.values(obj));
 
}
printAllValues(obj);
----------------------------------------------------------------
----------------------------------------------------------------
2.Parsing an JSON object’s Keys:
-----------------------------
Write a function called “printAllKeys” which returns an newArray of all the input object’s keys.
-----------------------------
Example Input:
{name : ‘RajiniKanth’, age : 25, hasPets : true}
-----------------------------
Example Output:
[‘name’, ‘age’, ‘hasPets’]
-----------------------------
Sample Function proto:
function printAllKeys(obj) {
 // your code here
}
-----------------------------
Code:

var obj = {name : "RajiniKanth", age : 33, hasPets : false};

function printAllValues(obj)
{
 console.log(Object.keys(obj));
 
}
printAllValues(obj);
----------------------------------------------------------------
----------------------------------------------------------------
3.Parsing an JSON object and convert it to a list:
-----------------------------
Write a function called “convertObjectToList” which converts an object literal into an array of arrays.
-----------------------------
Input (Object):
var object = {name: “ISRO”, age: 35, role: “Scientist”};
-----------------------------
Output:
[[“name”, “ISRO”], [“age”, 35], [“role”, “Scientist”]]
-----------------------------
Sample Function proto:
var obj = {name: “ISRO”, age: 35, role: “Scientist”};
function convertListToObject(obj) {
 // your code here
}
-----------------------------
Code:

var obj = {name : "RajiniKanth", age : 33, hasPets : false};

function printAllValues(obj)
{
 console.log(Object.entries(obj));
 
}
printAllValues(obj);
----------------------------------------------------------------
----------------------------------------------------------------
4.Parsing a list and transform the first and last elements of it:

Write a function ‘transformFirstAndLast’ that takes in an array, and returns an object with:
-----------------------------
1) the first element of the array as the object’s key, and
2) the last element of the array as that key’s value.

Input (Array):
var array = [“GUVI”, “I”, “am”, “Geek”];
-----------------------------
Output:
var object = {
GUVI : “Geek”
}
-----------------------------
Sample Function proto:
var arr = [“GUVI”, “I”, “am”, “a geek”];
function transformFirstAndLast(arr) {
 
 return newObject;
}
-----------------------------
Code:

var arr = ["GUVI", "I","am", "a geek"];
var arr1=arr[0];
var arr2=arr.reverse();
var arr3=arr2[0];
var temp=[arr1,arr3];

function transformFirstAndLast(arr) 
{
var newObject={};

 newObject[temp[0]]=temp[1];
 
 return newObject;
}
var result =transformFirstAndLast(temp);
console.log(result);
----------------------------------------------------------------
----------------------------------------------------------------
5.Parsing a list of lists and convert into a JSON object:

Write a function “fromListToObject” which takes in an array of arrays, and returns an object with each pair of elements in the array as a key-value pair.
-----------------------------
Input (Array):

var array = [[“make”, “Ford”], [“model”, “Mustang”], [“year”, 1964]];
-----------------------------
Output:

var object = {
make : “Ford”
model : “Mustang”,
year : 1964
}
-----------------------------
Sample Function proto:

var arr = [[“make”, “Ford”], [“model”, “Mustang”], [“year”, 1964]];
function fromListToObject(arr) {
 var newObject = {};
 
 return newObject;
}
-----------------------------
Code:

var arr = [["make", "Ford"], ["model", "Mustang"], ["year", 1964]];

function fromListToObject(arr) 
{
 var newObject = {};
 
 newObject[arr[0][0]]=arr[0][1];
 newObject[arr[1][0]]=arr[1][1];
 newObject[arr[2][0]]=arr[2][1];
 
 return newObject;
}
var result=fromListToObject(arr);
console.log(result);
----------------------------------------------------------------
----------------------------------------------------------------
6.Parsing a list of lists and convert into a JSON object:
 
Ans:Object.fromEntries(arr)-->where,it actually converts list of list into JSON objects and might some browsers won't support this function.since,must use the some plug-ins to support it.
-----------------------------------------------------------
-----------------------------------------------------------
7.Parsing two JSON objects and Compare:

Input:

var expected = {foo: 5, bar: 6};
var actual = {foo: 5, bar: 6}
assertObjectsEqual(actual, expected, ‘detects that two objects are equal’);
-----------------------------
Output:
Passed
-----------------------------
function assertObjectsEqual(actual, expected, testName){
 // your code here
}
-----------------------------
Code:

var expected = {foo: 5, bar: 6};
var actual = {foo: 5, bar: 6};
var expected1=JSON.stringify(expected);
var actual1=JSON.stringify(actual);


function assertObjectsEqual(actual, expected)
{
 if(actual===expected)
 {
     return "passed";
 }
 return "Failed";
}

var result=assertObjectsEqual(actual1,expected1);
console.log(result);
----------------------------------------------------------------
----------------------------------------------------------------
8.Parsing JSON objects and Compare:

I have a mock data of security Questions and Answers. You function should take the object and a pair of strings and should return if the quest is present and if its valid answer.
-----------------------------
Input:

var securityQuestions = [
 {
 question: “What was your first pet’s name?”,
 expectedAnswer: “FlufferNutter”
 },
 {
 question: “What was the model year of your first car?”,
 expectedAnswer: “1985”
 },
 {
 question: “What city were you born in?”,
 expectedAnswer: “NYC”
 }
]
-----------------------------
function chksecurityQuestions(securityQuestions,question) {

 // your code here
 return true or false; 
}
-----------------------------
//Test case1:
var ques = “What was your first pet’s name?”;
var ans  =  “FlufferNutter”;
var status = chksecurityQuestions(securityQuestions, ques, ans);
console.log(status); // true

//Test case2:
var ques = “What was your first pet’s name?”;
var ans  =  “DufferNutter”;
var status = chksecurityQuestions(securityQuestions, ques, ans);
console.log(status); // flase
-----------------------------
Code:

var securityQuestions = [
 {
 question: "What was your first pet’s name?",
 expectedAnswer: "FlufferNutter"
 },
 {
 question: "What was the model year of your first car?",
 expectedAnswer: "1985"
 },
 {
 question: "What city were you born in?",
 expectedAnswer: "NYC"
 }
]
var question="What was your first pet’s name?";//asked with user
var answer="FlufferNutter";//user answer i.e)defined by user

function chksecurityQuestions(securityQuestions,question,ans) 
{
for(var i in securityQuestions)
{
    if(securityQuestions[i].question==question&&securityQuestions[i].expectedAnswer==answer)
    {
    return true; 
    }
    return false;
}
}
var result=chksecurityQuestions(securityQuestions,question,answer);
console.log(result);
----------------------------------------------------------------
----------------------------------------------------------------
9.Parsing JSON objects and Compare:

Write a function to return the list of characters below 20 age
-----------------------------
Input:

var students = [
 {
 name: “Siddharth Abhimanyu”, age: 21}, { name: “Malar”, age: 25},
 {name: “Maari”,age: 18},{name: “Bhallala Deva”,age: 17},
 {name: “Baahubali”,age: 16},{name: “AAK chandran”,age: 23},   {name:“Gabbar Singh”,age: 33},{name: “Mogambo”,age: 53},
 {name: “Munnabhai”,age: 40},{name: “Sher Khan”,age: 20},
 {name: “Chulbul Pandey”,age: 19},{name: “Anthony”,age: 28},
 {name: “Devdas”,age: 56} 
 ];
-----------------------------
Function proto:

function returnMinors(arr)
{
}
console.log(returnMinors(students));
-----------------------------
Code:

var students = [
 {name: "Siddharth Abhimanyu", age: 21},{ name: "Malar", age: 25},
 {name: "Maari",age: 18},{name: "Bhallala Deva",age: 17},
 {name: "Baahubali",age: 16},{name: "AAK chandran",age: 23},  
 {name:"Gabbar Singh",age: 33},{name: "Mogambo",age: 53},
 {name: "Munnabhai",age: 40},{name: "Sher Khan",age: 20},
 {name:"“Chulbul Pandey",age: 19},{name: "Anthony",age: 28},
 {name:"Devdas",age: 56} 
 ];
function returnMinors(arr)
{
    var temp=[];
    for(var i in students)
    {
        if(students[i].age<20)
        {
            temp.push(students[i]);
        }
    }
    console.log(temp);
}
console.log(returnMinors(students));
----------------------------------------------------------------
----------------------------------------------------------------